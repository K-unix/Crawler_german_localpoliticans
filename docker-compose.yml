# docker-compose.yml â€” worker service only

services:
  postgres:
    image: postgres:15
    container_name: crawler-postgres
    environment:
      POSTGRES_DB: ${POSTGRES_DB:-rustcrawler}
      POSTGRES_USER: ${POSTGRES_USER:-rustcrawler}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-rustcrawler}
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER:-rustcrawler} -d ${POSTGRES_DB:-rustcrawler}"]
      interval: 10s
      timeout: 5s
      retries: 5
    restart: unless-stopped

  worker:
    build: .
    container_name: crawler-worker
    network_mode: "host"
    environment:
      - AWS_REGION=${AWS_REGION}
      - TZ=Europe/Berlin
      - AWS_ACCESS_KEY_ID=${AWS_ACCESS_KEY_ID}
      - AWS_SECRET_ACCESS_KEY=${AWS_SECRET_ACCESS_KEY}
      - S3_BUCKET=${S3_BUCKET}
      - TS_AUTHKEY
      - DISABLE_TAILSCALE=true
      - AWS_ENDPOINT_URL=${AWS_ENDPOINT_URL}
      - AWS_ALLOW_HTTP=${AWS_ALLOW_HTTP}
      - ALLOW_INSECURE_PROXY_TLS=1
      - RUST_LOG=info
    labels:
      - com.rustcrawler.logs=true
      - com.rustcrawler_service=worker

  crawler-ingestor:
    build:
      context: ./python_container
      dockerfile: dockerfile
    container_name: crawler-ingestor
    depends_on:
      postgres:
        condition: service_healthy
    environment:
      - AWS_REGION=${AWS_REGION}
      - AWS_ACCESS_KEY_ID=${AWS_ACCESS_KEY_ID}
      - AWS_SECRET_ACCESS_KEY=${AWS_SECRET_ACCESS_KEY}
      - AWS_ENDPOINT_URL=${AWS_ENDPOINT_URL}
      - AWS_ALLOW_HTTP=${AWS_ALLOW_HTTP}
      - S3_BUCKET=${S3_BUCKET}
      - CRAWL_DATA_PREFIX=${CRAWL_DATA_PREFIX:-crawl-data/}
      - CRAWL_HTML_PREFIX=${CRAWL_HTML_PREFIX:-crawl-html/}
      - DATABASE_URL=${CRAWLER_DATABASE_URL:-postgresql://${POSTGRES_USER:-rustcrawler}:${POSTGRES_PASSWORD:-rustcrawler}@postgres:5432/${POSTGRES_DB:-rustcrawler}}
      - INGEST_POLL_INTERVAL_SECONDS=${INGEST_POLL_INTERVAL_SECONDS:-30}
      - REDIS_URL=${REDIS_URL}
    command: ["python", "crawler_ingest.py"]
    restart: unless-stopped

volumes:
  postgres_data:
